//
// Created by Gaurav Kesh Roushan on 12/11/24.
//

#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
	static vector<int> maximumBeauty(vector<vector<int>>& items,vector<int>& queries) {
		vector<int> arr;
		int b = 0;
		for (int i = 0; i < queries.size(); i++) {
			for (int j = 0; j < items.size(); j++) {
				if (items{j]{0] <= queries{i]) {
					b = max(b, items{j]{1]);
				}
			}
			if (b != 0) {
				arr.push_back(b);
				b = 0;
			}
		}
		if (arr.empty()) {
			arr.push_back(0);
		}
		return arr;
	}
};


int main(){
	vector<vector<int>> ite ={{5108,6901],{6673,8897],{9596,5623],{7346,6258],{8753,9055],{6420,5011],{6383,8819],{9241,7662],{8682,7464],{6288,5974],{9926,9285],{6055,9558],{8175,9064],{9627,6279],{8094,8101],{6517,5929],{6953,6963],{5430,5559],{7487,7751],{9667,5977],{6815,5853],{7352,6799],{7592,7754],{9908,9041],{7582,6281],{9234,9706],{6366,8839],{5709,5591],{7002,5438],{5633,8511],{7343,7219],{9105,5373],{8022,7364],{9640,9654],{8804,7123],{8341,9322],{7794,9264],{7867,8651],{8872,7115],{7193,8429],{5953,8695],{6357,6929],{8827,8705],{7596,8715],{7417,6496],{8890,5987],{5096,9853],{9176,7517],{5192,7620],{7682,8140],{8048,8545],{5092,6367],{9903,8088],{7322,5494],{8672,8408],{6833,9280],{9520,9138],{8151,7942],{5690,8316],{5421,5565],{6194,8437],{7391,6538],{7333,7413],{7794,9633],{7683,8399],{9626,8719],{5353,6054],{5933,8783],{6974,9180],{8720,9707],{6728,6361],{9676,6081],{7028,8166],{8240,9486],{7782,6729],{8461,9705],{7735,6291],{8989,8354],{7623,6996],{6383,9597],{7896,6680],{8047,6081],{7151,6732],{7998,8201],{7094,7693],{7407,5983],{8641,8510],{6639,8772],{7643,5387],{7585,8470],{6791,7391],{5648,7313],{6195,8046],{5411,5784],{9075,9236],{6603,7672],{6469,8194],{6642,5595],{5899,7279],{8019,7093],{9182,9081],{6135,5037],{9817,5049],{7748,9019],{5757,8165],{9707,8181],{7915,7150],{7419,9911],{5683,8038],{5329,9483],{9119,7923],{9103,5322],{9747,9413],{6636,8088],{7612,6051],{8843,8899],{8080,8310],{9291,9969],{8414,7690],{8484,7773],{8078,9139],{8559,7991],{5878,5164],{7918,7755],{7870,5626],{5279,5871],{6820,9864],{7833,7542],{8695,5462],{9764,5669],{7007,5543],{6759,6021],{7901,8366],{9250,5939],{6385,8565],{8512,8859],{6640,7842],{7281,7223],{8433,9166],{5772,8619],{6381,7264],{5968,7457],{6795,9451],{8707,6247],{6990,5794],{9260,5031],{7669,8370],{5714,6526],{6696,6535],{8422,9813],{8633,6059],{9007,5611],{6666,8739],{6726,9285],{5251,6685],{6804,7892],{6242,8508],{8915,8404],{9209,7053],{8868,5914],{8386,7859],{6438,6586],{9567,5877],{7871,8844],{6792,5825],{9025,9077],{8444,7459],{9823,6334],{6257,8125],{9706,5234],{5874,9405],{7992,7724],{9271,8351],{5351,6490],{7004,6539],{6144,9733],{5772,7394],{9541,6422],{7714,6005],{5751,8047],{9837,5036],{5395,7006],{6751,8543],{9826,9557],{9670,9421],{7025,5566],{5922,8739],{6627,7274],{8783,9040],{7118,9497],{8514,5321],{7815,7773],{8317,5940],{6731,8280],{9825,6532],{8448,8329],{7446,7164],{8882,7425],{7346,5174],{7537,7567],{8374,7674],{8857,6433],{7519,5715],{7707,7024],{8272,5413],{8956,5084],{6684,5001],{9261,5296],{7754,7124],{8403,5859],{8659,8481],{7563,5114],{9296,7386],{5768,9768],{8400,5430],{6340,7458],{6031,8390],{8304,9929],{7743,9032],{7580,8916],{5821,7942],{9619,8306],{5518,7542],{7829,5117],{7465,5320],{6611,9823],{8529,8996],{9177,6380],{9239,8775],{6378,8575],{5483,9922],{5743,8217],{7032,9645],{7413,6422],{7527,7532],{9268,7663],{7101,7433],{8068,7338],{9161,8592],{8614,5855],{6217,6844],{5967,5902],{6181,7785],{6363,7196],{9842,5623],{9855,9635],{7452,7748],{7622,7227],{7068,9468],{8749,8535],{5677,8752],{8863,7353],{7363,7084],{7568,6701],{7317,5765],{5708,6710],{5454,9097],{8927,8138],{7276,7158],{7267,7848],{5138,8743],{5856,6385],{7535,6333],{8425,5111],{7686,6672],{5847,7505],{9017,6241],{9845,6872],{6389,6312],{8058,8782],{5527,6428],{8545,7276],{6631,8226],{7837,7147],{5696,6103],{6653,6588],{6215,5270],{6777,9953],{7776,5959],{5090,6630],{9358,9897],{5307,5529],{6583,9816],{9554,6943],{6286,5044],{8156,8663],{9343,5213],{5352,6266],{8251,5034],{6319,9832],{7847,6046],{7208,9799],{5876,7964],{5897,5654],{6867,9397],{7410,9168],{5151,8309],{9751,5166],{8559,6479],{9133,7986],{9223,6677],{8297,9022],{7649,5881],{5429,6721],{7836,8407],{7218,5790],{7113,9406],{7461,6600],{6753,5438],{6369,7762],{7400,9830],{5606,6325],{8223,9820],{9298,8856],{6300,9713],{8056,6750],{5543,8892],{7993,7749],{7138,6342],{6039,7228],{9777,6673],{6731,7432],{8939,6335],{5967,6745],{8313,6150],{7636,5244],{5841,7635],{8596,5560],{6790,9594],{8889,9602],{9804,6506],{6255,6998],{6908,9110],{9343,8585],{5235,9009],{7715,6741],{7978,6528],{9343,8578],{5376,6502],{8777,9901],{8319,8073],{8180,7051],{7445,7802],{7301,7352],{9471,5793],{9082,7268],{6079,9893],{9128,6860],{5121,7403],{7401,6347],{5922,6838],{9557,5197],{5052,7208],{6971,8171],{5957,5011],{7090,8829],{9303,7911],{9508,7129],{7490,5592],{8542,6058],{9618,8475],{8076,7794],{8365,8760],{5125,9836],{7278,8493],{8649,7263],{8699,7413],{7456,7820],{9748,8893],{9972,5407],{7553,6696],{6104,7176],{6474,7328],{6278,6958],{5222,8477],{9186,9586],{5128,9611],{5448,6778],{6461,5847],{7251,6028],{5778,9475],{6697,9391],{9454,7165],{8086,5733],{6264,6484],{8099,9682],{8404,5783],{5757,9013],{5936,5831],{5765,5834],{8415,7611],{9599,6510],{7654,7969],{9261,9204],{5542,5788],{5077,8366],{6969,8801],{9201,7018],{6672,7890],{5028,5586],{8371,6656],{7759,7133],{8801,8259],{5493,7843],{8430,9502],{5167,9495],{7072,6247],{7583,7117],{8450,7324],{6278,6311],{8441,8953],{5552,8491],{6038,6288],{8690,9905],{8806,6305],{5036,8581],{7156,5524],{5063,5305],{7895,6163],{6303,5619],{5526,5690],{9256,9168],{8045,8314],{9439,9938],{8256,5962],{5350,9893],{7394,9882],{5242,9837],{7675,8275],{5158,7254],{5617,6062],{9373,8736],{6842,6887],{6255,9415],{9601,9491],{5055,5698],{7919,8465],{6105,7244],{7770,7571],{6862,8732],{6187,6381],{8677,8470],{9793,9270],{8501,6140],{9174,8437],{6941,7056],{8750,7201],{8297,5198],{6003,5353],{7454,9530],{7948,6479],{6385,9047],{5810,6904],{7705,6784],{9446,5741],{9571,8224],{7450,7849],{9236,7341],{6046,8185],{9808,7015],{8100,6522],{9443,9048],{9144,7226],{6643,5063],{8733,9533],{7984,7543],{6499,7559],{6877,5269],{8666,7993],{8602,5391],{7191,6191],{6609,7322],{8381,7920],{8076,7312],{8105,7681],{8393,7472],{5289,7855],{9375,7560],{6085,6661],{5267,9739],{8345,6399],{5620,9012],{7410,6281],{9923,5427],{6731,9416],{6569,5954],{9640,7069],{6080,9475],{7955,6638],{7511,5209],{7998,6658],{7277,9746],{9657,8269],{8557,7229],{9087,7601],{6608,8161],{6326,9748],{9399,7225],{5140,5546],{5434,6052],{5758,6291],{6584,5557],{7405,6790],{7301,7029],{9840,6146],{5311,6761],{5224,7338],{8378,8184],{5366,8518],{5554,9386],{9878,9951],{5538,8458],{9852,5652],{9975,7622],{6487,5970],{6715,5061],{6123,6073],{6745,6762],{6583,5001],{8445,9447],{5441,5688],{5841,7105],{6476,7661],{8048,6246],{9457,5652],{8120,7086],{7503,5910],{5307,5176],{5018,6197],{6728,5132],{8949,7317],{7855,7608],{7953,7543],{7089,6538],{8899,6208],{8574,6115],{5370,8413],{8862,6831],{6130,8920],{6477,6403],{5038,9983],{6121,5393],{8386,7372],{7302,6517],{5188,8181],{8642,6389],{8572,5832],{8717,6581],{6781,6983],{7467,6168],{9647,9965],{9006,8796],{7184,6017],{9659,8291],{6115,6575],{9329,6660],{6400,5503],{8681,5942],{7137,5686],{9101,8912],{5338,5976],{6827,7519],{6144,6139],{6258,5313],{5560,6602],{6170,6606],{5394,6025],{5758,9288],{6054,6115],{7171,6589],{8629,5539],{7713,5574],{9548,7291],{8545,9634],{6160,7837],{6793,6353],{8083,5071],{5916,5706],{7191,9149],{6406,7405],{6403,5085],{6809,5462],{5397,9839],{6012,5556],{7625,5831],{8144,5292],{8832,6234],{9723,6029]];
	vector<int> k = {5548,5407,4452,9785,8619,6729,5478,5958,5043,6009,4669,4366,9047,8901,4787,8098,7177,9560,8917,9559,8261,6666,9933,8053,6016,6452,8035,7829,7515,10443,7985,6369,9750,7956,9839,8865,6408,5106,9194,10418,5489,4872,9189,7031,8090,7467,10291,10136,9842,10885,9875,5329,4282,8048,7572,4320,4110,7774,7870,6322,10099,5948,5434,9571,8614,6929,10682,5681,4903,5286,7737,10084,9763,8043,4746,7128,10709,10626,7754,4434,9440,6419,5041,5101,10109,4362,6509,9028,4019,9531,5347,7618,5752,7069,8460,5500,9685,6983,6658,5645,8594,6444,4887,7211,6062,8131,6204,9928,9189,8829,6256,5244,10485,9735,8432,9614,9738,5630,10420,7593,5411,9081,4850,5558,9476,9899,6471,7159,6048,7090,9685,10558,10084,5852,4657,4604,7469,8424,10423,10456,5183,7355,10721,7698,5096,6881,6148,10260,9873,8518,9081,7141,6869,4470,9124,6906,9361,6195,5014,5967,5876,4358,9022,6388,8215,7559,7520,8472,7210,8892,4322,7997,10599,6129,6951,7974,4500,8637,9944,6463,5517,6277,5236,6394,10636,10542,8563,9083,5605,6063,5155,5927,4547,6998,4626,10640,9955,6990,5665,5118,4390,6726,9782,9733,10737,7297,10163,4836,7623,9349,5951,8158,9500,4262,4970,6509,5614,10503,9581,9627,10676,6893,8760,8347,9870,5367,4721,8205,6890,5913,9405,10540,10159,8239,4712,5262,6949,10905,5030,10795,4329,7332,7969,8446,4076,10160,5272,6271,9820,4754,9890,4412,9536,10440,4948,8885,6067,4778,9680,6178,4880,5033,8301,6428,8673,4180,8362,10337,7347,10571,10737,8415,8377,6570,5345,9415,7955,4934,8479,7098,10055,9832,9819,4198,7033,10029,7538,9347,4138,7442,9370,8560,7414,7267,8171,4976,4550,8136,9398,9195,10776,4806,5641,10718,6058,10637,8572,7747,10293,6136,8806,7913,4536,7642,5975,6966,7134,4335,9144,5861,9015,7902,8181,6592,8797,10717,5891,9081,5180,5649,7583,6223,10762,9995,10374,9266,6296,7580,10060,4159,10086,10493,10782,6936,10692,4622,7088,5637,5470,9133,9814,7899,6077,8227,6358,5855,5323,10502,7154,8409,10628,8274,4779,4980,6330,9641,5103,4923,4372,7100,8137,6275,5882,7804,9841,10251,6645,10084,7316,9855,4562,8300,8644,4942,4856,10276,10680,10229,10352,7851,4186,9771,8994,5235,4353,7270,8094,6767,5296,9543,8440,8569,6828,7662,4435,4844,6265,4300,5562,10120,7220,5797,10854,6158,8325,8248,6617,7868,6694,6358,9417,4722,6814,5189,6234,7085,10275,6098,6106,6356,9509,6685,9309,6594,9941,4694,4166,8328,6005,6170,7286,7450,6392,9606,5788,8173,4426,4755,5808,4657,10936,7763,8282,7999,6929,7224,10969,9863,6468,9489,9547,8173,6449,4437,6436,7115,7330,7968,6873,4141,5322,10359,6113,8357,7778,9948,7579,10456,5223,10407,6610,5011,8835,8402,6045,8756,8135,4255,10660,5113,9578,10748,9047,10560,6647,9704,10768,7172,10361,5012,10070,6478,7236,5608,6840,4051,5670,8621,4180,7036,8922,6174,4424,9649,4360,10003,4118,8639,9344,10422,9055,5782,7787,10501,10410,7606,5658,8553,4321,9429,7357,8853,6586,4752,8239,10801,8239,6297,6157,6122,10782,9303,8288,9897,8716,9120,8906,6923,4842,5499,9471,8195,6056,7734,5113,8995,6815,10331,4259,6304,9356,10313,4630,8641,10543,5934,7370,4898,5577,10203,10260,4728,7810,6630,7764,5101,8349,10465,4625,9398,10779,6951,4636,4700,9765,5024,9442,4769,7274,5977,6308,10138,6994,5308,9945,10779,7390,9925,6819,5815,6244,8860,5147,4567,7702,9604,7672,8902,10048,7976,5812,8945,5242,6892,10271,10921,7288,8274,7785,10134,5901,9800,10197,10590,8327,4893,6002,6247,9511,8290,8607,10605,5289,4643,8107,6441,6601,6210,6429,8252,7315,10459,5024,6528,8655,6642,6021,6206,4684,8859,10804,8440,7218,8502,4306,5490,5905,5183,6906,7366,8312,7523,8417,7090,5372,9734,9203,5147,9396,9667,5232,8817,4110,8574,9881,6636,8894,8194,5123,6671,10099,9399,5537,6381,4198,8425,9615,6004,6822,9710,8800,9017,8200,4336,7886,6973,4967,7909,7058,9544,6152,9560,10449,9189,4633,5847,8689,4958,9444,6240,9969,5868,5396,5442,5510,10130,6440,9421,8329,8878,4271,9310,4438,5674,8587,9151,7913,9655,5690,8091,6096,7422,8343,10046,7426,6612,5857,7903,9901,8053,4037,4674,7345,5380,8993,6783,5377,9066,5575,5617,5983,9140,4938,9034,9991,4710,8992,6688,4272,8705,10885,9568,7041,4192,9873,6334,7989,7487,4105,9745,5824,9867,8416,4565,10273,6746,6508,4818,7655,6298,6668,9502,8414,5385,8915,8942,6000,8018,4704,8728,8828,4156,6451,4279,5126,5856,8304,8310,8772,8125,10772,4843,8900,9751,4052,4371,9128,6505,8845,6384,10709,5237,5736,5287,7555,9376,6807,8223,6182,10419,7351,5628,7280,6815,5742,5913,8373,6536,6754,10504,9734,10883,4893,5240,8881,9820,8662,4556,9276,6403,7428,6097,8628,10592,8869,5915,10468,4787,4277,5481,7298,6891,10504,5585,5006,7439,8803,8723,5036,5991,7083,10006,4766,7081,5978,7435,10802,7443,9641,5179,10454,6240,4181,7446,8497,7476,6274,7918,9752,7943,7485,6422,7297,5599,4462,9677,8282,8422,4193,7564,4878,7690,5311,9999,9511,6998,8699,9658,8624,8980,5808,9441,6776,9392,6603,5935];
	vector<int> m = Solution::maximumBeauty(ite,k);
	for(int i:m){
		cout<<i<<",";
	};
};